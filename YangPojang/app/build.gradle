plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

//local.properties 불러오기
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def MAP_API_KEY = properties.getProperty('MAP_API_KEY')
android {
    namespace 'com.yuhan.yangpojang'
    compileSdk 33

    defaultConfig {
        applicationId "com.yuhan.yangpojang"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String","POI_API_KEY", properties.getProperty("poi_api_key"))

        manifestPlaceholders = [MAP_API_KEY : MAP_API_KEY]


    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        buildConfig true
        compose true
        viewBinding true
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.9.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //firebase 인증을 위한 implementation
    implementation("com.google.firebase:firebase-crashlytics")
    implementation("com.google.android.gms:play-services-auth:20.7.0")
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-analytics")
    implementation("com.google.firebase:firebase-database")
    implementation 'com.google.firebase:firebase-auth'
    implementation("com.google.android.gms:play-services-auth:20.6.0")
    implementation(platform("com.google.firebase:firebase-bom:32.2.3"))
    implementation(platform("com.google.firebase:firebase-bom:32.3.1"))
    implementation platform('com.google.firebase:firebase-bom:32.2.2')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-database:20.1.0'
    implementation("com.google.firebase:firebase-firestore")
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //firebase 이용을 위한 implematation
    implementation(platform("com.google.firebase:firebase-bom:32.2.2")) //여러 firebase 라이브러리를 사용하는 경우 모든 버전이 호환되도록 BoM을 사용하여 라이브러리 버전을 관리하는것 추천
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth-ktx:22.1.1'
    implementation 'com.google.firebase:firebase-database-ktx:20.2.2'
    implementation 'com.google.firebase:firebase-database:20.2.2'
    implementation 'com.google.firebase:firebase-firestore:24.7.0'
    implementation 'com.google.firebase:firebase-auth:22.1.1'
    implementation 'com.google.firebase:firebase-storage:20.2.1'

    // Glide(이미지 관련)  사용을 위한 implementation  -    // 오픈소스 이미지 핸들링할 때 많이 사용되는 글라이드
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'


    //jsoup - 자바로 html 구문 분석 가능한 java 파서
    implementation 'org.jsoup:jsoup:1.16.1'
    implementation 'com.sparkjava:spark-core:2.9.3'

    //firbase 및 jwt 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // 지도 관련
    implementation 'com.naver.maps:map-sdk:3.17.0' //네이버 지도 SDK 의존성
    implementation 'com.google.android.gms:play-services-location:21.0.1' //구글 플레이 서비스 위치 API 의존성(현재 위치 가져오기)
    implementation 'androidx.recyclerview:recyclerview:1.3.1' // RecyclerView 의존성 추가
    implementation 'com.firebase:geofire-android-common:3.1.0' //파이어베이스 - Geohash : 중심 위치와 반경 기반으로 Geohash범위 계산
    implementation 'ch.hsr:geohash:1.3.0' // 지오해시(Geohash) 알고리즘을 구현하는 라이브러리
    implementation 'com.github.bumptech.glide:glide:4.12.0' //Glide를 사용하여 이미지 로딩 및 표시 기능 활용
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0' //이미지 로딩에 필요한 코드 생성
    implementation 'org.locationtech.proj4j:proj4j:1.2.2' // 좌표계 변환(EPSG:5179 -> WGS84)
    implementation 'com.squareup.okhttp3:okhttp:4.10.0' //HTTP통신 라이브러리(국토정보플랫폼 검색 api 사용)


}